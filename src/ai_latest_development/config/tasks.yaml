performance_task:
  description: >
    Use atlas_performance_tool to fetch ALL clusters and 6-hour performance measurements.
    For EACH cluster and process, analyze: CPU usage patterns, disk IOPS trends, memory utilization,
    network I/O (bytes in/out), connection counts, and operations per second (query, insert, update, delete).
    
    Create a DETAILED Markdown report with:
    1. Executive Summary - overall performance health across all clusters
    2. Per-Cluster Analysis - dedicated section for each cluster with:
       - Current configuration (instance size, region, replica count)
       - Resource utilization metrics with actual numbers and percentages
       - Performance bottlenecks identified (high CPU >75%, disk saturation >80%, slow queries)
       - Comparison of provisioned vs actual usage
    3. Critical Issues - list of urgent performance problems requiring immediate attention
    4. Optimization Recommendations - 5-7 specific, actionable recommendations with expected impact
    
    Be thorough and data-driven. Include actual metric values, not just generic statements.
  expected_output: >
    Comprehensive Markdown performance report (minimum 300 words) with executive summary,
    detailed per-cluster analysis with metrics, critical issues list, and 5-7 specific
    optimization recommendations. Must include actual numbers from the metrics.
  agent: performance_agent

security_task:
  description: >
    Use atlas_security_tool to perform a COMPREHENSIVE security audit of the MongoDB Atlas project.
    
    Analyze and report on:
    1. IP Access List - examine every entry, flag 0.0.0.0/0 or overly broad ranges, assess risk level
    2. Database Users & Roles - list ALL users, their roles, databases they access, identify excessive privileges
    3. TLS/SSL Configuration - verify TLS version (minimum TLS 1.2), check connection string enforcement
    4. Encryption at Rest - determine if enabled, check for external KMS (AWS/Azure/GCP), flag if using default keys
    5. Network Security - check VPC peering, private endpoints, public exposure
    6. Authentication Methods - review SCRAM, X.509, LDAP configurations
    
    Create a DETAILED Markdown security audit report with:
    1. Executive Summary - overall security posture (Critical/High/Medium/Low risk)
    2. Detailed Findings - one section per security domain with:
       - Current configuration details
       - Specific vulnerabilities found (with severity: Critical/High/Medium/Low)
       - Real-world attack scenarios enabled by each vulnerability
       - Compliance implications (PCI-DSS, HIPAA, SOC2, GDPR)
    3. Risk Assessment - prioritized list of security risks with impact analysis
    4. Remediation Roadmap - 5-7 specific, actionable security improvements with urgency levels
    
    Be CRITICAL. Every security gap must be identified and explained in detail.
  expected_output: >
    Comprehensive Markdown security audit report (minimum 400 words) with executive summary,
    detailed findings per security domain (IP access, users/roles, TLS, encryption, network),
    risk assessment with severity ratings, and 5-7 specific remediation steps with urgency levels.
    Must include actual configuration details and explain WHY each issue is a risk.
  agent: security_agent

cost_task:
  description: >
    Use atlas_cost_tool to perform a RUTHLESS, data-driven cost optimization analysis.
    
    For EACH cluster, analyze:
    1. Compute Costs - instance type (M0/M2/M5/M10/M20/M30/etc.), replication factor, shard count
    2. Storage Costs - disk size (GB), IOPS provisioned, volume type (STANDARD/PROVISIONED)
    3. Backup Costs - continuous backup enabled, PIT recovery, snapshot frequency, retention period
    4. Data Transfer - network ingress/egress patterns, cross-region transfer costs
    5. Autoscaling Configuration - min/max instance sizes, scaling triggers, efficiency
    6. Actual Utilization - 24-hour metrics: CPU %, memory %, connections, ops/sec, disk usage %
    
    Calculate cost waste by comparing:
    - Provisioned capacity vs actual usage (e.g., M10 but only 5% CPU = waste)
    - Backup costs vs actual recovery needs
    - Network costs from inefficient data access patterns
    - Idle or underutilized clusters costing money
    
    Create a DETAILED Markdown cost analysis report with:
    1. Executive Summary - total monthly spend estimate, total waste identified, potential savings
    2. Per-Cluster Cost Breakdown - for EACH cluster include:
       - Current configuration with estimated monthly cost in USD
       - Actual resource utilization with specific metrics (CPU %, memory %, disk %, ops/sec)
       - Overprovisioning analysis - exactly how much capacity is wasted
       - Right-sizing recommendation with new config and monthly savings in USD
    3. Backup Cost Analysis - current backup costs, optimization opportunities, savings
    4. Infrastructure Waste Report - idle clusters, oversized instances, unnecessary replicas
    5. Cost Optimization Roadmap - 7-10 specific actions with:
       - Current cost
       - Recommended change
       - Estimated monthly savings
       - Annual savings projection
       - Implementation effort (Easy/Medium/Hard)
    6. Summary Table - total potential monthly and annual savings
    
    Be EXTREMELY CRITICAL. Use actual MongoDB Atlas pricing. Calculate real dollar amounts.
    Every dollar of waste must be identified and quantified.
  expected_output: >
    Comprehensive Markdown cost analysis report (minimum 500 words) with executive summary showing
    total potential savings, detailed per-cluster cost breakdown with current spend vs optimized spend,
    backup cost analysis, infrastructure waste report, and 7-10 specific cost-cutting recommendations
    with estimated monthly and annual USD savings for each. Must include ACTUAL pricing calculations
    and utilization percentages. Include a final summary table of all savings opportunities.
  agent: cost_agent

synthesis_task:
  description: >
    Use report_synthesis_tool to read the comprehensive report.md file containing outputs from
    Performance, Security, and Cost agents. Perform intelligent synthesis and correlation:
    
    1. ANALYZE the complete report and extract:
       - All performance issues, bottlenecks, and metrics
       - All security vulnerabilities and risks
       - All cost inefficiencies and savings opportunities
    
    2. CALCULATE health scores (0-100) for each domain:
       - Performance Health Score (based on CPU, latency, bottlenecks, metrics availability)
       - Security Health Score (based on IP exposure, encryption, privileges, compliance)
       - Cost Efficiency Score (based on utilization, waste, overprovisioning)
       - Overall Health Score (weighted: 35% performance, 40% security, 25% cost)
    
    3. IDENTIFY cross-cutting concerns that span multiple domains:
       - Issues affecting both performance and cost (e.g., overprovisioned instances)
       - Security measures impacting performance (e.g., encryption overhead)
       - Cost optimizations with security implications (e.g., reducing backups)
    
    4. PRIORITIZE all findings by: Severity (Critical/High/Medium/Low) Ã— Business Impact
    
    5. DEDUPLICATE overlapping recommendations from different agents
    
    Create a comprehensive EXECUTIVE SUMMARY report with:
    1. Health Score Dashboard - overall score, per-domain scores, health rating (Excellent/Good/Fair/Poor/Critical)
    2. Executive Overview - 3-paragraph summary for C-level executives
    3. Critical Issues Requiring Immediate Action - top 5 issues with severity, impact, and urgency
    4. Cross-Domain Insights - correlations and dependencies between performance, security, and cost
    5. Prioritized Action Plan - consolidated roadmap with 10-15 actions ranked by ROI and urgency
    6. Risk Assessment - what happens if issues are not addressed (quantified business impact)
    7. Quick Wins - 3-5 easy optimizations that can be implemented immediately
    8. Long-term Strategic Recommendations - architectural improvements for next 6-12 months
    9. Comparison vs Best Practices - how this infrastructure compares to industry standards
    10. Metrics to Track - KPIs to monitor improvement over time
  expected_output: >
    Comprehensive executive summary report (minimum 600 words) with:
    - Health Score Dashboard (overall + per-domain scores with ratings)
    - 3-paragraph Executive Overview
    - Top 5 Critical Issues with severity ratings and business impact
    - Cross-domain correlation insights
    - Prioritized action plan with 10-15 consolidated recommendations ranked by ROI
    - Risk assessment with quantified business impact
    - 3-5 Quick Wins for immediate implementation
    - Long-term strategic recommendations
    - Best practices comparison
    - Success metrics and KPIs to track
    Must be data-driven, actionable, and executive-friendly.
  agent: report_synthesizer
